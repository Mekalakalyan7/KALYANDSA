import java.util.*;

public class Main {
    public static void quickSort(int[] arr, int low, int high) {
        if (low < high) {
            int j = partition(arr, low, high);
            quickSort(arr, low, j - 1);
            quickSort(arr, j + 1, high);
        }
    }

    public static int partition(int[] arr, int low, int high) {
        int pivot = arr[low];
        int i = low;
        int j = high;
        
        while (i < j) {
            // Moving i until we find an element greater than pivot
            while (i < high && arr[i] <= pivot) {
                i++;
            }
            // Moving j until we find an element smaller than pivot
            while (j > low && arr[j] > pivot) {
                j--;
            }
            // Swap elements at i and j
            if (i < j) {
                int temp = arr[i];
                arr[i] = arr[j];
                arr[j] = temp;
            }
        }
        // Swap pivot with element at j
        int temp = arr[low];
        arr[low] = arr[j];
        arr[j] = temp;
        
        return j;  // Return pivot index
    }

    public static void main(String[] args) {
        int arr[] = {5, 4, 1, 3, 2};
        int n = arr.length;
        quickSort(arr, 0, n - 1);
        for (int i = 0; i < n; i++) {
            System.out.print(arr[i] + " ");
        }
    }
}
